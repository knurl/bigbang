registryCredentials:
  enabled: true
  registry: {{HelmRegistry}}
  username: {{HelmRepoUser}}
  password: {{HelmRepoPassword}}

config:
  # Please find available configs here: https://docs.starburst.io/latest/admin/cache-service.html#configuration-properties
  # Note that the values for service-database.* should not be changed (i.e. copy them to your values)
  config.properties: |
    service-database.user=${ENV:SERVICE_DATABASE_USER}
    service-database.password=${ENV:SERVICE_DATABASE_PASSWORD}
    service-database.jdbc-url=${ENV:SERVICE_DATABASE_JDBC_URL}
    starburst.user=starburst_service
    {% if TlsEnabled %}
    starburst.jdbc-url=jdbc:trino://{{StarburstHost}}:8443?SSL=true&roles=system:sysadmin
    starburst.password=test
    {% else %}
    starburst.jdbc-url=jdbc:trino://{{StarburstHost}}:8080&roles=system:sysadmin
    starburst.password=
    {% endif %}
    refresh-initial-delay=1m
    {% if SalesforceEnabled %}
    rules.file=etc/rules.json
    type-mapping=FILE
    type-mapping.file=etc/type-mapping.json
  type-mapping.json: |
    {
      "rules": {
        "{{HiveCat}}": {
          "timestamp(0)":     "timestamp(3)",
          "timestamp(1)":     "timestamp(3)",
          "timestamp(2)":     "timestamp(3)",
          "varchar(131072)":  "varchar",
          "varchar(130000)":  "varchar",
          "varchar(100000)":  "varchar"
        }
      }
    }
  rules.json: |
    {
      "defaultCacheCatalog": "{{HiveCat}}",
      "defaultCacheSchema": "{{CacheTsrSchema}}",
      "defaultGracePeriod": "10m",
      "rules": [
        {
          "refreshInterval": "1h",
          "catalogName": "{{SfdcCat}}",
          "schemaName": "salesforce",
          "tableName": "account"
        },
        {
          "refreshInterval": "1h",
          "catalogName": "{{SfdcCat}}",
          "schemaName": "salesforce",
          "tableName": "opportunity"
        },
        {
          "refreshInterval": "1h",
          "catalogName": "{{SfdcCat}}",
          "schemaName": "salesforce",
          "tableName": "user"
        },
        {
          "refreshInterval": "1h",
          "catalogName": "{{SfdcCat}}",
          "schemaName": "salesforce",
          "tableName": "pov__c"
        },
        {
          "refreshInterval": "1h",
          "catalogName": "{{SfdcCat}}",
          "schemaName": "salesforce",
          "tableName": "onboarding__c"
        }
      ]
    }
  {% endif %}

resources:
  requests:
    memory: {{cache_service_mem}}
    cpu: {{cache_service_cpu}}
  limits:
    memory: {{cache_service_mem}}
    cpu: {{cache_service_cpu}}

expose:
  type: loadBalancer
  loadBalancer:
    annotations:
      {% if Target == "aws" %}
      service.beta.kubernetes.io/aws-load-balancer-internal: "true"
      {% elif Target == "az" %}
      service.beta.kubernetes.io/azure-load-balancer-internal: "true"
      {% elif Target == "gcp" %}
      networking.gke.io/load-balancer-type: "Internal"
      {% endif %}

# External database, so tolerant to spot instances
database:
  type: external
  external:
    jdbcUrl: jdbc:postgresql://{{cachesrv_address}}:{{postgres_port}}/{{DBNameCacheSrv}}
    user: {{cachesrv_user}}
    password: {{DBPassword}}

{% if Target == 'az' %}
# Make sure to prioritise failure-tolerant pods to the spot instances
tolerations:
- key: "kubernetes.azure.com/scalesetpriority"
  operator: "Equal"
  value: "spot"
  effect: "NoSchedule"
{% endif %}

affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: app
              operator: In
              values:
                - starburst-hive
        topologyKey: "kubernetes.io/hostname"
